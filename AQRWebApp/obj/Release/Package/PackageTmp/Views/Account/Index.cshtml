@using AQRWebApp.Models;
@model AQRWebApp.Models.RegisterModel

@{
    ViewBag.Title = "Accounts list";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<!-- DataTables -->
<link href="@Url.Content("~/Content/Table/css/jquery.dataTables.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/Table/css/dataTables.bootstrap.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/Table/css/dataTables.fontAwesome.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/Table/css/dataTables.tableTools.css")" rel="stylesheet" />

<!--datatable-->
<script src="@Url.Content("~/Content/Table/js/jquery.dataTables.js")"></script>
<script src="@Url.Content("~/Content/Table/js/dataTables.tableTools.js")"></script>
<script src="@Url.Content("~/Content/Table/js/dataTables.bootstrap.js")"></script>
<script src="@Url.Content("~/Content/Table/js/jquery.jeditable.js")"></script>
<script src="@Url.Content("~/Content/Table/js/jquery.dataTables.editable.js")"></script>
<script src="@Url.Content("~/Content/Table/js/jquery.dataTables.rowGrouping.js")"></script>

<script type="text/javascript" charset="utf-8">
    var oTableAccount;
    var personSection = "{";

    @{
        if (Model.ListOfPersonName != null)
        {
            for (int i = 0; i <= Model.ListOfPersonName.Count() - 1; i++)
            {
                <text>
                    personSection = personSection + "'" + '@Model.ListOfPersonName[i].Id' + "':'" + '@Model.ListOfPersonName[i].Name'  + "'";

                    if (@i < @Model.ListOfPersonName.Count - 1)
                    {
                        personSection = personSection + ",";
                    }
                    else {
                        personSection = personSection + "}";
                    }
                </text>
            }
        }
        
    }
    
    
    $(document).ready(function () {
        
        /* Init the table */
        oTableAccount = $("#DataTableAccount").DataTable({
            dom: "<'row-fluid'<'span6'l><'span6'f>r>t<'row-fluid'<'span12'i><'span12 center'p>>",
            tableTools: {
                "sRowSelect": "os",
                "sSelectedClass": "selected"
            },
            "bJQueryUI": false,
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "@Url.Action("GetList", "Account")",
            "iDisplayLength": 10,
            "bAutoWidth": true,
            "sPaginationType": "full_numbers",
            "aaSorting": [[2, "asc"]],
            "bStateSave": true,
            "aoColumns": [
                        {
                            "sTitle": "Id",
                            "sWidth": "5%",
                            "sClass": "center",
                            "sDefaultContent": "",
                            "bSearchable": false,
                            "bSortable": false,
                            "bVisible":false
                        },
                        {
                            "sTitle": "User name",
                            "sClass": "left", 
                            "sDefaultContent": ""
                        },
                        {
                            "sTitle": "Full name",
                            "sWidth": "30%",
                            "sClass": "left",
                            "sDefaultContent": ""
                        },
                        {
                            "aTargets": [4],
                            "sTitle": "View 1",
                            "sClass": "center",
                            "mRender": function (data, type, full) {
                                if (data == "1") {
                                    return '<input type="checkbox" checked value="' + data + '" class="viewRight">';
                                } else {
                                    return '<input type="checkbox" value="' + data + '" class="viewRight">';
                                }
                            }
                        },
                        {
                            "aTargets": [5],
                            "sTitle": "View 2",
                            "sClass": "center",
                            "mRender": function (data, type, full) {
                                if (data == "1") {
                                    return '<input type="checkbox" checked value="' + data + '" class="viewRight">';
                                } else {
                                    return '<input type="checkbox" value="' + data + '" class="viewRight">';
                                }
                            }
                        },
                        {
                            "aTargets": [6],
                            "sTitle": "View 3",
                            "sClass": "center",
                            "mRender": function (data, type, full) {
                                if (data == "1") {
                                    return '<input type="checkbox" checked value="' + data + '" class="viewRight">';
                                } else {
                                    return '<input type="checkbox" value="' + data + '" class="viewRight">';
                                }
                            }
                        },
                        {
                            "aTargets": [7],
                            "sTitle": "Edit",
                            "sClass": "center",
                            "mRender": function (data, type, full) {
                                if (data == "1") {
                                    return '<input type="checkbox" checked value="' + data + '" class="editRight">';
                                } else {
                                    return '<input type="checkbox" value="' + data + '" class="editRight">';
                                }
                            }
                        },
                        {
                            "sTitle": "Delete",
                            "aTargets": [8],
                            "sClass": "center",
                            "mRender": function (data, type, full) {
                                if (data == "1") {
                                    return '<input type="checkbox" checked value="' + data + '" class="deleteRight">';
                                } else {
                                    return '<input type="checkbox" value="' + data + '" class="deleteRight">';
                                }
                            }
                        },
                        {
                            "sTitle": "Admin",
                            "aTargets": [10],
                            "sClass": "center",
                            "mRender": function (data, type, full) {
                                if (data == "1") {
                                    return '<input type="checkbox" checked value="' + data + '" class="adminRight">';
                                } else {
                                    return '<input type="checkbox" value="' + data + '" class="adminRight">';
                                }
                            }
                        }
            ]
        });       
        
        $('#DataTableAccount tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                oTableAccount.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        var tt = new $.fn.dataTable.TableTools(oTableAccount);
        $("#tableToolAccount").prepend(tt.fnContainer());

        $("#DataTableAccount").dataTable().makeEditable({
            sUpdateURL: "@Url.Action("Update", "Account")",
            sDeleteURL: "@Url.Action("DeleteByUserId", "Account")",
            sDeleteRowButtonId: "btnDeleteRow",
            
            "aoColumns": [
                            {
                                //Empty object is used for the default editable settings
                            },
                            {
                                indicator: 'Lưu...',
                                tooltip: 'Chọn nhân viên',
                                loadtext: 'Tải dữ liệu...',
                                type: 'select',
                                onblur: 'submit',
                                data: personSection
                            },
                            null,
                            null,
                            null,
                            null,
                            null,
                            null
            ]
        });
        
        $("#btnResetPasswordAccountRow").click(function(e){
            var data = oTableAccount.row('selected').data();
            
            if (data != null && $.isNumeric(data[0])) {
                $("#lblResetPasswordError").text("");
                $("#formResetPassword")[0].reset();
                        
                e.preventDefault();

                $('#modalformResetPassword').modal({
                    "backdrop": "static",
                    "keyboard": true,
                    "show": true
                });
            }
        });

        $("#btnUpdateResetPassword").click(function(){
            if(CheckFormResetAccountRow()==true)
            {
                InitialResetPasswordError();

                var data = oTableAccount.row('.selected').data();
                if (data != null && $.isNumeric(data[0])) {
                    $.ajax({
                        url: "@Url.Action("ResetPassword", "Account")",
                        type: "POST",
                        data:{username: data[1], newpassword: $("#newpassword").val()},
                        error: function () {
                            ShowResetPasswordError("Lỗi kết nối mạng.");
                            return false;
                        },
                        success: function (result) {
                            if (result == "") {
                                $('#modalformResetPassword').modal("hide");
                                oTableAccount.draw();
                            }
                            else {
                                ShowResetPasswordError(result);
                            }
                        }
                    });
                }
            }
        });

        $("#btnUpdateCreateNewAccount").click(function(){
            if (CheckFormCreateNewAccount()==true)
            {
                InitialCreateNewAccountError();
                
                $.ajax({
                    url: "@Url.Action("CreateNewAccount", "Account")",
                    type: "POST",
                    data:JSON.stringify({username: $("input[name='usernameForCreateNewAccount']").val(), password: $("input[name='passwordForCreateNewAccount']").val(), view1Role: $("input[name='View1Role']").prop("checked"), view2Role: $("input[name='View2Role']").prop("checked"), view3Role: $("input[name='View3Role']").prop("checked"), editRole: $("input[name='EditRole']").prop("checked"), deleteRole: $("input[name='DeleteRole']").prop("checked"), adminRole: $("input[name='AdminRole']").prop("checked"), personId: $("select[name='PersonId']").val() }),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    error: function () {
                        ShowCreateNewAccountError("Lỗi kết nối mạng.");
                        return false;
                    },
                    success: function (result) {
                        if (result == "") {
                            $("#modalformCreateNewAccount").modal("hide");
                            oTableAccount.draw();
                        }
                        else {
                            ShowCreateNewAccountError(result);
                        }
                    }
                });
            }
        });        

        $("#btnUpdateCreateAccountAutomatic").click(function(){
            if (CheckFormCreateAccountAutomatic()==true)
            {
                InitialCreateAccountAutomaticError();

                $.ajax({
                    url: "@Url.Action("CreateAccountAutomatic", "Account")",
                            type: "POST",
                            data:JSON.stringify({password: $("input[id='newpasswordForCreateAccountAutomatic']").val()}),
                            dataType: "json",
                            contentType: 'application/json; charset=utf-8',
                            error: function () {
                                ShowCreateAccountAutomaticError("Lỗi kết nối mạng.");
                                
                                return false;
                            },
                            success: function (result) {
                                if (result == "") {
                                    $("#modalformCreateAccountAutomatic").modal("hide");
                                    oTableAccount.draw();
                                }
                                else {
                                    ShowCreateAccountAutomaticError(result);
                                }
                            }
                        });
                    }
        });

        $("#btnCreateNewAccount").click(function(e){
            InitialCreateNewAccountError();

            $("#formCreateNewAccount")[0].reset();
                        
            e.preventDefault();

            $('#modalformCreateNewAccount').modal({
                "backdrop": "static",
                "keyboard": true,
                "show": true,
                "width": "550"
            });
        });

        $("#btnCreateAccountAutomaticRow").click(function(e){
            InitialCreateAccountAutomaticError();
            
            $("#formCreateAccountAutomatic")[0].reset();
                        
            e.preventDefault();

            $('#modalformCreateAccountAutomatic').modal({
                "backdrop": "static",
                "keyboard": true,
                "show": true
            });
        });
        
        $("#btnDeleteAllAccount").click(function(){
            if(confirm("Bạn có chắc chắn muốn xóa tất cả tài khoản không ?")==true)
            {
                $.ajax({
                    url: "@Url.Action("DeleteAllAccount", "Account")",
                    type: "POST",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    error: function () {
                        alert("Lỗi kết nối mạng.");
                        return false;
                    },
                    success: function (result) {
                        if (result == "") {
                            oTableAccount.draw();
                        }
                        else {
                            alert(result);
                        }
                    }
                });
            }
        });

        $("#btnApplyLoginSystemToHumanResourceSystem").click(function(){
            $.ajax({
                url: "@Url.Action("ApplyLoginSystemToHumanResourceSystem", "Account")",
                type: "POST",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                error: function () {
                    alert("Lỗi kết nối mạng.");
                    return false;
                },
                success: function (result) {
                    if (result == "") {
                        oTableAccount.draw();
                    }
                    else {
                        alert(result);
                    }
                }
            });
        });

        $("#DataTableAccount tbody").delegate("tr td input","click",function(){
            $.ajax({
                url: "@Url.Action("Update", "Account")",
                type: "POST",
                data:{id:$(this).closest("tr").prop("id"), value:$(this).prop("checked"), rowId:$(this).closest("tr").index(), columnPosition: $(this).closest("td").index(), columnId:null, columnName:""},
                error: function () {
                    alert("Lỗi kết nối mạng.");
                    return false;
                },
                success: function (result) {
                }
            });
        });
    });

    function InitialCreateNewAccountError()
    {
        $("#divCreateNewAccountError").hide();
        $("#lblCreateNewAccountError").text("");
    }

    function ShowCreateNewAccountError(text)
    {
        $("#divCreateNewAccountError").show();
        $("#lblCreateNewAccountError").text(text);
    }

    function InitialCreateAccountAutomaticError()
    {
        $("#divCreateAccountAutomaticError").hide();
        $("#lblCreateAccountAutomaticError").text("");
    }

    function ShowCreateAccountAutomaticError(text)
    {
        $("#divCreateAccountAutomaticError").show();
        $("#lblCreateAccountAutomaticError").text(text);
    }

    function InitialResetPasswordError()
    {
        $("#divResetPasswordError").hide();
        $("#lblResetPasswordError").text("");
    }

    function ShowResetPasswordError(text)
    {
        $("#divResetPasswordError").show();
        $("#lblResetPasswordError").text(text);
    }  

    function CheckFormCreateNewAccount()
    {
        var check=true;
        var error = "";

        InitialCreateNewAccountError();
                
        if($("input[id='usernameForCreateNewAccount']").val()=="")
        {
            error = "Nhập tên truy cập";
            
            check=false;
        }

        if($("input[id='passwordForCreateNewAccount']").val()=="")
        {
            error = "Nhập mật khẩu";
            check=false;
        }
        
        if($("input[id='passwordForCreateNewAccount']").val() != $("input[id='confirmPasswordForCreateNewAccount']").val())
        {
            error = "Mật khẩu không khớp nhau";
            check=false;
        }

        if (!check)
            ShowCreateNewAccountError(error);

        return check;
    }   

    function CheckFormCreateAccountAutomatic()
    {
        var check=true;
        var error = "";

        InitialCreateAccountAutomaticError();
        
        if($("input[id='newpasswordForCreateAccountAutomatic']").val()=="")
        {
            error = "Nhập mật khẩu";
            check=false;
        }

        if (!check)
            ShowCreateAccountAutomaticError(error);

        return check;
    }

    function CheckFormResetAccountRow()
    {
        var check=true;
        var error = "";

        InitialResetPasswordError();
        
        if($("input[id='newpassword']").val()=="" || $("input[id='confirmnewpassword']").val()=="")
        {
            error = "Chưa nhập mật khẩu";
            check=false;
        }

        if(check==true && $("#newpassword").val()!=$("#confirmnewpassword").val())
        {
            error = "Nhập lại mật khẩu không khớp";
            check=false;
        }

        if (!check)
            ShowResetPasswordError(error);

        return check;
    }
        
</script>

<div class="modal fade" id="modalformCreateNewAccount" title="Tạo tài khoản mới" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                    <h3 class="animated rubberBand">@Html.Raw("Tạo tài khoản mới")</h3>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" id="divCreateNewAccountError">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <label id="lblCreateNewAccountError"></label>
                    </div>

                    <form id="formCreateNewAccount" role="form">
                        <fieldset>

                            @Html.Partial("_PartialRegister", Model)                

                        </fieldset>                          
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Hủy bỏ</a>
                    <a href="#" class="btn btn-primary" id="btnUpdateCreateNewAccount">Cập nhật</a>
                </div>
            </div>
    </div>
</div>

<div class="modal fade" id="modalformCreateAccountAutomatic" title="Tạo tài khoản tự động" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                    <h3 class="animated rubberBand">@Html.Raw("Tạo tài khoản tự động")</h3>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" id="divCreateAccountAutomaticError">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <label id="lblCreateAccountAutomaticError"></label>
                    </div>

                    <form id="formCreateAccountAutomatic" role="form">
                        <fieldset>
                           
                            <div class="form-group">
                                <label for="passwordForCreateNewAccount">@Html.Raw("Mật khẩu: ")</label>
                                <input type="password" class="form-control" id="newpasswordForCreateAccountAutomatic" name="newpasswordForCreateAccountAutomatic" placeholder="nhập mật khẩu">
                            </div>

                        </fieldset>                          
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Hủy bỏ</a>
                    <a href="#" class="btn btn-primary" id="btnUpdateCreateAccountAutomatic">Cập nhật</a>
                </div>
            </div>
    </div>
</div>

<div class="modal fade" id="modalformResetPassword" title="Reset mật khẩu" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                    <h3 class="animated lightSpeeedIn">@Html.Raw("Reset mật khẩu")</h3>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger" id="divResetPasswordError">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <label id="lblResetPasswordError"></label>
                    </div>

                    <form id="formResetPassword" role="form">
                        <fieldset>
                           
                            <div class="form-group">
                                <label for="newpassword">@Html.Raw("Mật khẩu: ")</label>
                                <input type="password" class="form-control" id="newpassword" name="newpassword" placeholder="nhập mật khẩu">
                            </div>

                            <div class="form-group">
                                <label for="confirmnewpassword">@Html.Raw("Nhập lại:")</label>
                                <input type="password" class="form-control" id="confirmnewpassword" name="confirmpassword" placeholder="nhập lại mật khẩu">
                            </div>
                        </fieldset>                          
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Hủy bỏ</a>
                    <a href="#" class="btn btn-primary" id="btnUpdateResetPassword">Cập nhật</a>
                </div>
            </div>
    </div>
</div>

<section class="content-header">
    <h1>
        ACCOUNTS LIST
        <small>manage user accounts</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Accounts list</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">

                <div class="box-header">
                    <h3 class="box-title">Accounts list</h3>

                    <div class="box-tools pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        <div class="btn-group">
                            <button class="btn btn-box-tool dropdown-toggle" data-toggle="dropdown"><i class="fa fa-wrench"></i></button>
                            <ul class="dropdown-menu" role="menu">
                                <li><a href="#">Action</a></li>
                                <li><a href="#">Another action</a></li>
                                <li><a href="#">Something else here</a></li>
                                <li class="divider"></li>
                                <li><a href="#">Separated link</a></li>
                            </ul>
                        </div>
                        <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div><!-- /.box-header -->

                <div class="box-body">
                    <div class="AddDeleteButton">
                        <button class="btn btn-default" id="btnCreateNewAccount">Tạo tài khoản mới</button>
                        <button class="btn btn-default" id="btnCreateAccountAutomaticRow">Tạo tài khoản tự động</button>
                        <button class="btn btn-default" id="btnApplyLoginSystemToHumanResourceSystem">Cập nhật lại hệ thống đăng nhập</button>
                        <button class="btn btn-danger" id="btnResetPasswordAccountRow">Reset mật khẩu</button>
                        <button class="btn btn-danger" id="btnDeleteRow">Xóa</button>
                        <button class="btn btn-danger" id="btnDeleteAllAccount">Xóa tất cả tài khoản</button>
                    </div>
                    
                    <div class="tableTool" id="tableToolAccount"></div>

                    <table class="table table-bordered table-hover" id="DataTableAccount">
                        <thead>
                            <tr>
                                <th rowspan="2" style="text-align:center">Id</th>
                                <th rowspan="2" style="text-align:center">User name</th>
                                <th rowspan="2" style="text-align:center">Full name</th>
                                <th colspan="6" style="text-align:center">Roles</th>
                            </tr>
                            <tr>
                                <th style="text-align:center">View 1</th>
                                <th style="text-align:center">View 2</th>
                                <th style="text-align:center">View 3</th>
                                <th style="text-align:center">Edit</th>
                                <th style="text-align:center">Delete</th>
                                <th style="text-align:center">Admin</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
        <!--/span-->

    </div><!--/row-->
</section>


    
